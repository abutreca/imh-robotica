def unnamed():
  set_safety_mode_transition_hardness(1)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_tcp(p[0.0,0.0,0.0,0.0,0.0,0.0])
  set_payload(0.0)
  step_count_f5183de3_97e6_44da_af81_8931f13f62e9 = 0
  thread Step_Counter_Thread_3f85a4ba_d5c2_4600_9c35_02433fe008ae():
    while (True):
      step_count_f5183de3_97e6_44da_af81_8931f13f62e9 = step_count_f5183de3_97e6_44da_af81_8931f13f62e9 + 1
      sync()
    end
  end
  run Step_Counter_Thread_3f85a4ba_d5c2_4600_9c35_02433fe008ae()
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_gravity([0.0, -1.2026031567627009E-15, -9.82])
  while (True):
    $ 1 "Robot Program"
    $ 2 "Script: exercise_2.script"
    #function: recorrer rejilla
    def recorrer_rejilla(n_filas,n_col,dist):
    
       # Ciclo
       i=0
       j=0
       x=0
       y=0
    
       while i < n_filas:
          while j < n_col:
             pose_sig=p[0.5+x,-0.15+y,0.05,0,3.1416,0]
             pose_desb=p[0.5+x,-0.15+y,0,0,3.1416,0]
    
             # Movimientos de desbarbado
             movej(pose_sig,1.5,1)
             movel(pose_desb,1.5,1)
             sleep(2.5)
             movel(pose_sig,1.5,1)
    
             # Siguiente iteración
             textmsg("Siguiente columna")
             y=y+dist
             j=j+1
          end
    
          # Reset y actualizar numero de fila
          textmsg("Siguiente fila")
          i=i+1
          j=0
          x=x+dist
          y=0
       end
    end
    
    
    #MAIN
    #info usuario
    popup("Iniciando programa",title="Titulo",warning=False,blocking=True)
    textmsg("Iniciando programa")
    
    n_col=3
    n_filas=3
    dist=0.1
    
    #Preparar instalacion
    set_gravity([0,0,9.8])
    set_tcp(p[0,0,0.150,0,0,1.57])
    set_payload_mass(1.5)
    
    #Movimiento inicial
    safe_pose=[0,-0.78,-1.57,-2.15,1.57,0]
    movej(safe_pose,1.5,1)
    
    
    #Movimientos de llegada a intersección y desbarbados
    
    recorrer_rejilla(n_filas,n_col,dist)
    
    # Vuelta a la posición de seguridad
    movej(safe_pose,1.5,1)
  end
end
